{"version":3,"sources":["reducers/user.js","reducers/wallet.js","reducers/index.js","store/index.js","pages/style/styleLogin.js","pages/Login.js","actions/index.js","pages/style/styleWallet.js","pages/Wallet.js","App.js","serviceWorker.js","index.js"],"names":["INITIAL_STATE","email","userReducer","state","action","type","payload","currencies","expenses","currencyReducer","filter","expense","id","document","getElementsByClassName","item","checked","forEach","element","setAttribute","expenseToChange","find","getElementById","value","date","description","currency","method","tag","JSON","stringify","exchangeRates","editedExpenses","map","rootReducer","combineReducers","user","wallet","store","createStore","composeWithDevTools","applyMiddleware","thunk","Main","style","div","Container","Img","img","Form","form","Input","input","Button","button","ContainerP","P","p","Login","onInputChange","target","name","setState","userPassword","userEmail","length","test","isButtonDisabled","onClickFunction","event","preventDefault","props","setUserEmail","history","loginOk","push","this","src","placeholder","onChange","disabled","onClick","autofocus","to","React","Component","connect","dispatch","Div","DivHeader","Header","header","H1","h1","Select","select","DivH1","DivTable","Table","table","ExitButton","Wallet","fetchExchange","a","fetch","response","json","result","console","log","addTotalUpdate","totalExpenses","selectedCurrency","userExpense","rate","Object","values","codein","code","ask","thisTotalExpense","editTotalUpdate","saveButtonClick","dispatchSaveExpenses","newId","editButtonClick","dispatchEditSavedExpenses","addForm","editForm","removeAttribute","Number","parse","checks","Array","from","hasAttribute","convertedValue","exitButton","window","back","dispatchGetCurrencies","dispatchRemoveExpense","dispatchEditExpense","toFixed","htmlFor","size","maxlength","required","key","data-testid","hidden","entries","split","reverse","join","className","codes","keys","saveUserExpenses","editExpense","editSavedExpenses","GlobalStyle","createGlobalStyle","App","title","exact","path","component","Boolean","location","hostname","match","ReactDOM","render","basename","process","navigator","serviceWorker","ready","then","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.4aae4e34.chunk.js","sourcesContent":["// Reducer será responsável por tratar as informações da pessoa usuária\n\nconst INITIAL_STATE = {\n  email: '',\n};\n\nconst userReducer = (state = INITIAL_STATE, action) => {\n  switch (action.type) {\n  case 'SET_USER_EMAIL': // atualizando o INITIAL_STATE\n    return { ...state, email: action.payload };\n  default:\n    return state;\n  }\n};\n\nexport default userReducer;\n","// Esse reducer será responsável por tratar o todas as informações relacionadas as despesas\n\nconst INITIAL_STATE = {\n  currencies: [],\n  expenses: [],\n};\n\nconst currencyReducer = (state = INITIAL_STATE, action) => {\n  switch (action.type) {\n  case 'SET_CURRENCIES':\n    return {\n      ...state,\n      currencies: action.payload\n    };\n  case 'SAVE_USER_EXPENSES':\n    return {\n      ...state,\n      expenses: [\n        ...state.expenses,\n        action.payload\n      ]\n    };\n  case 'REMOVE_EXPENSES':\n    return {\n      ...state,\n      expenses: state.expenses\n        .filter((expense) => expense.id !== action.payload)\n    };\n  case 'EDIT_EXPENSE':\n      (([...(document.getElementsByClassName(\"checkbox\"))])\n        .filter((item) => item.checked === false))\n        .forEach((element) => element\n          .setAttribute('hidden', 'true'));\n\n    const expenseToChange = state.expenses\n      .find((expense) =>\n        expense.id === action.payload);\n\n    (document.getElementById('edit-id'))\n      .value = expenseToChange.id;\n    (document.getElementById('edit-date'))\n      .value = expenseToChange.date;\n    (document.getElementById('edit-expense'))\n      .value = expenseToChange.value;\n    (document.getElementById('edit-description'))\n      .value = expenseToChange.description;\n    (document.getElementById('edit-coin'))\n      .value = expenseToChange.currency;\n    (document.getElementById('edit-method'))\n      .value = expenseToChange.method;\n    (document.getElementById('edit-tag'))\n      .value = expenseToChange.tag;\n    (document.getElementById('edit-rates'))\n      .value = JSON.stringify(expenseToChange.exchangeRates);\n\n    return {\n      ...state,\n      expenses: [...state.expenses]\n    };\n  case 'EDIT_SAVED_EXPENSE':\n    const editedExpenses = (state.expenses).map((expense) => {\n      if (expense.id === (action.payload).id) {\n        return action.payload;\n      }\n      return expense;\n    });\n    return {\n      ...state,\n      expenses: editedExpenses,\n    }\n  default:\n    return state;\n  }\n};\n\nexport default currencyReducer;\n","// Configure os seus reducers.\n// ATENÇÃO: você obrigatoriamente tem que utilizar as chaves \"user\" e \"wallet\" no seu estado global\n\nimport { combineReducers } from 'redux';\nimport user from './user';\nimport wallet from './wallet';\n\nconst rootReducer = combineReducers({ user, wallet });\n\nexport default rootReducer;\n","// Estado global (store)\n\nimport { createStore, applyMiddleware } from 'redux';\nimport { composeWithDevTools } from 'redux-devtools-extension';\nimport thunk from 'redux-thunk';\nimport rootReducer from '../reducers';\n\nconst store = createStore(\n  rootReducer,\n  composeWithDevTools(\n    applyMiddleware(thunk),\n  ),\n);\n\nexport default store;\n","import style from 'styled-components';\n\nexport const Main = style.div`\n  display: flex;\n  flex-direction: column;\n  width: 100vw;\n  align-items: center;\n  justify-content: center;\n`;\n\nexport const Container = style.div`\n  display:flex;\n  flex-direction: column;\n  justify-content: space-around;\n  align-items: center;\n  margin: 15vh auto 2vh auto;\n  width: 300px;\n  height: 400px;\n  background-color: #221007;\n  box-shadow: 2px 2px 20px #191919,\n             -2px -2px 20px #292929;\n  transition: border-radius cubic-bezier(0.075, 0.82, 0.165, 1) 1s,\n              transform cubic-bezier(0.075, 0.82, 0.165, 1) 1s;\n  :hover {\n    border-bottom-right-radius: 50px;\n    border-top-left-radius: 50px;\n    transform: scale(1.05);\n  }\n  @media screen and (max-width:290px){\n    display:flex;\n    flex-direction: column;\n    justify-content: space-around;\n    align-items: center;\n    margin: 15vh auto 2vh auto;\n    width: 250px;\n    height: 400px;\n    background-color: #221007;\n    box-shadow: 2px 2px 20px #191919,\n              -2px -2px 20px #292929;\n    transition: border-radius cubic-bezier(0.075, 0.82, 0.165, 1) 1s,\n                transform cubic-bezier(0.075, 0.82, 0.165, 1) 1s;\n    :hover {\n      border-bottom-right-radius: 50px;\n      border-top-left-radius: 50px;\n      transform: scale(1.05);\n    }\n  }\n`;\n\nexport const Img = style.img`\n  max-width:60px;\n  max-height:65px;\n  width: auto;\n  height: auto;\n`;\n\nexport const Form = style.form`\n  flex-direction: column;\n  --width-of-input: 230px;\n  --border-height: 1px;\n  --border-before-color: #f18f01;\n  --border-after-color: f5f1ed;\n  --input-hovered-color: #4985e01f;\n  position: relative;\n  width: var(--width-of-input);\n\n`;\n\nexport const Input = style.input`\n  color: #ffffff;\n  font-size: 18px;\n  font-family: 'Lucida Sans', 'Lucida Sans Regular', 'Lucida Grande', 'Lucida Sans Unicode', Geneva, Verdana, sans-serif;\n  background-color: transparent;\n  border-radius: 10px;\n  width: 100%;\n  box-sizing: border-box;\n  padding-inline: 0.5em;\n  padding-block: 0.7em;\n  border: none;\n  border-top: var(--border-height) solid var(--border-before-color);\n  :hover {\n    background: var(--input-hovered-color);\n  }\n  margin-bottom: 50px;\n  ::placeholder {\n    color: #ffffff;\n    font-size: 16px;\n  }\n`;\n\nexport const Button = style.button`\n  text-transform: uppercase;\n  color: #221007;\n  padding: 0.6em 1.3em;\n  font-size: 13px;\n  font-weight: bold;\n  border-radius: 0.5em;\n  background: #ffedd8;\n  border: 2px solid #221007;\n  box-shadow: 3px 3px 8px #c5c5c5,\n             -3px -3px 8px #ffffff;\n  :active {\n    box-shadow: 4px 4px 12px #c5c5c5,\n               -4px -4px 12px #ffffff;\n  }\n  margin: 10px 67px 20px 67px;\n`;\n\nexport const ContainerP = style.div`\n  width: 300px;\n  margin: 0 40vw 0 40vw;\n  @media screen and (max-width:290px){\n    width: 200px;\n  }\n`;\n\n  export const P = style.p`\n  color: #221007;\n  font-size: 10px;\n  letter-spacing: 1px;\n  line-height: 15px;\n  text-align: center;\n`;\n","// componente\n\nimport React from 'react';\nimport { Redirect } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport propTypes from 'prop-types';\nimport { saveUserEmail } from '../actions/index';\nimport {\n  Main,\n  Container,\n  Img,\n  Form,\n  Input,\n  Button,\n  ContainerP,\n  P\n} from './style/styleLogin';\n\nclass Login extends React.Component {\n  constructor() {\n    super();\n\n    this.state = {\n      userPassword: '',\n      userEmail: '',\n      isButtonDisabled: true,\n      loginOk: false,\n    };\n  }\n\n  // handleChange genérico:\n  onInputChange = ({ target }) => {\n    const { name, value } = target;\n    this.setState({\n      [name]: value,\n    }, () => {\n      const { userPassword, userEmail } = this.state;\n\n      // validação do botão USANDO O STATE LOCAL:\n      const emailRegex = /^[a-z0-9.]+@[a-z0-9]+\\.[a-z]+(\\.[a-z]+)?$/i;\n      const CINCO = 5;\n      if (userPassword.length > CINCO && emailRegex.test(userEmail) === true) {\n        this.setState({\n          userPassword: '',\n          isButtonDisabled: false,\n        });\n      } else {\n        this.setState({\n          isButtonDisabled: true,\n        });\n      }\n    });\n  }\n\n  // função do botão\n  onClickFunction = (event) => {\n    event.preventDefault();\n    const { setUserEmail, history } = this.props;\n    const { userEmail } = this.state;\n    this.setState({\n      userEmail,\n      loginOk: true,\n    });\n    setUserEmail(userEmail);\n    history.push('/');\n  }\n\n  render() {\n    const { isButtonDisabled, loginOk } = this.state;\n    return (\n      <Main>\n        <Container>\n          <Img src=\"https://www.seekpng.com/png/full/332-3321868_jewelry-for-charismatic-appearance-wallets-organised-black-and.png\" />\n          <Form>\n            <Input\n              placeholder=\"e-mail\"\n              id=\"userEmail\"\n              name=\"userEmail\"\n              onChange={this.onInputChange}\n            />\n            <Input\n              placeholder=\"senha\"\n              type=\"password\"\n              id=\"userPassword\"\n              name=\"userPassword\"\n              onChange={ this.onInputChange }\n            />\n            {isButtonDisabled === true\n              ? null\n              : <Button\n                  id=\"btn\"\n                  type=\"submit\"\n                  disabled={ isButtonDisabled }\n                  onClick={this.onClickFunction}\n                  autofocus=\"true\"\n                  >\n                  Entrar\n                </Button>\n            }\n          </Form>\n        { loginOk && <Redirect to=\"/carteira\" /> }\n        </Container>\n        <ContainerP>\n          <P>- Desenvolvido por Vania Ioott -<br />Com JS, HTML, React, Redux e Styled Components/ CSS responsivo</P>\n        </ContainerP>\n      </Main>\n    );\n  }\n}\n\nconst mapDispatchToProps = (dispatch) => ({\n  setUserEmail: (state) => dispatch(saveUserEmail(state)),\n});\n\nLogin.propTypes = {\n  setUserEmail: propTypes.func.isRequired,\n};\n\nexport default connect(null, mapDispatchToProps)(Login);\n\n// expressão de Regex (linha 30) encontrada em https://pt.stackoverflow.com/questions/1386/express%C3%A3o-regular-para-valida%C3%A7%C3%A3o-de-e-mail\n","// Action\n\nexport const saveUserEmail = (email) => ({\n  type: 'SET_USER_EMAIL', // nome da ação que eu quero executar\n  payload: email, // a \"coisa\" em que eu quero mexer\n});\n\nexport const saveUserExpenses = (expenses) => ({\n  type: 'SAVE_USER_EXPENSES',\n  payload: expenses,\n});\n\nexport const getCurrencies = (currencies) => ({\n  type: 'SET_CURRENCIES',\n  payload: currencies,\n});\n\n// thunk (função que retorna outra função que chama a action)\nexport const fetchCurrencies = () => async (dispatch) => {\n  try {\n    const URL = 'https://economia.awesomeapi.com.br/json/all';\n    const response = await fetch(URL);\n    const result = await response.json();\n    const codes = (Object.keys(result))\n      .filter((element) => element !== 'USDT');\n    dispatch(getCurrencies(codes));\n  } catch (error) {\n    console.log(error);\n  }\n};\n\nexport const removeExpenses = (id) => ({\n  type: 'REMOVE_EXPENSES',\n  payload: id,\n});\n\nexport const editExpense = (id) => ({\n  type: 'EDIT_EXPENSE',\n  payload: id,\n});\n\nexport const editSavedExpenses = (expense) => ({\n  type: 'EDIT_SAVED_EXPENSE',\n  payload: expense,\n});\n","import style from 'styled-components';\n\nexport const Div = style.div`\n  justify-content: center;\n  font-family: 'Lucida Sans', 'Lucida Sans Regular', 'Lucida Grande', 'Lucida Sans Unicode', Geneva, Verdana, sans-serif;\n  width: 100vw;\n  justify-content: center;\n  align-items: center;\n`;\n\nexport const DivHeader = style.div`\n  display: flex;\n`;\n\nexport const Header = style.header`\n  display: flex;\n  color: white;\n  width: 100vw;\n  height: 70px;\n  justify-content: space-between;\n  align-items: center;\n  padding-right: 30px;\n  padding-left: 30px;\n  background-color: #221007;\n\n  @media screen and (max-width:290px){\n    flex-wrap: wrap;\n    color: white;\n    height: 70px;\n    font-size: 12px;\n    justify-content: space-between;\n    align-items: center;\n    padding-right: 10px;\n    padding-left: 10px;\n    background-color: #221007;\n  }\n`;\n\nexport const P = style.p`\n  font-size: 14px;\n  line-height: 20px;\n  @media screen and (max-width:290px){\n    font-size: 12px;\n  }\n`;\n\nexport const H1 = style.h1`\n  padding: 30px;\n  font-size: 28px;\n  color: #221007;\n  font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, Oxygen, Ubuntu, Cantarell, 'Open Sans', 'Helvetica Neue', sans-serif;\n`;\n\nexport const Form = style.form`\n  @media screen and (min-width:1100px){\n    color: white;\n    height: 72px;\n    font-size: 12px;\n    justify-content: space-between;\n    align-items: center;\n    padding: 10px 40px 20px 30px;\n    background-color: #8b5e34;\n    line-height: 25px;\n  }\n  @media screen and (min-width:769px) and (max-width: 1099px){\n    color: white;\n    height: 122px;\n    font-size: 12px;\n    justify-content: space-around;\n    align-items: center;\n    padding: 10px 30px;\n    background-color: #8b5e34;\n    line-height: 15px;\n    flex-wrap: wrap;\n  }\n  @media screen and (min-width:430px) and (max-width: 768px){\n    color: white;\n    height: 150px;\n    font-size: 12px;\n    justify-content: space-around;\n    align-items: center;\n    padding: 10px 30px;\n    background-color: #8b5e34;\n    line-height: 15px;\n    flex-wrap: wrap;\n  }\n  @media screen and (min-width:300px) and (max-width: 439px){\n    color: white;\n    height: 250px;\n    font-size: 12px;\n    justify-content: space-around;\n    align-items: center;\n    padding: 10px 30px;\n    background-color: #8b5e34;\n    line-height: 15px;\n    flex-wrap: wrap;\n  }\n  @media screen and (max-width:290px){\n    color: white;\n    height: 330px;\n    font-size: 12px;\n    justify-content: space-around;\n    align-items: center;\n    padding: 10px 10px;\n    background-color: #8b5e34;\n    line-height: 15px;\n    flex-wrap: wrap;\n  }\n`;\n\nexport const Select = style.select`\n  @media screen and (min-width:1100px){\n    font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, Oxygen, Ubuntu, Cantarell, 'Open Sans', 'Helvetica Neue', sans-serif;\n    width: 80%;\n    font-size: 15px;\n    padding: 10px 10px;\n    border: none;\n    border-radius: 4px;\n    background-color: #ffedd8;\n    :focus {\n    border: 2px solid #221007;\n    }\n    margin-right: 30px;\n  }\n  @media screen and (min-width:769px) and (max-width: 1099px){\n    font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, Oxygen, Ubuntu, Cantarell, 'Open Sans', 'Helvetica Neue', sans-serif;\n    font-size: 14px;\n    size: 5;\n    padding: 5px 5px;\n    border: none;\n    border-radius: 4px;\n    background-color: #ffedd8;\n    :focus {\n    border: 2px solid #221007;\n    }\n    margin-right: 10px;\n  }\n  @media screen and (max-width: 768px){\n    font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, Oxygen, Ubuntu, Cantarell, 'Open Sans', 'Helvetica Neue', sans-serif;\n    font-size: 14px;\n    size: 5;\n    padding: 5px 5px;\n    border: none;\n    border-radius: 4px;\n    background-color: #ffedd8;\n    :focus {\n    border: 2px solid #221007;\n    }\n    margin-right: 10px;\n  }\n`;\n\nexport const Input = style.input`\n  @media screen and (min-width:1100px){\n    font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, Oxygen, Ubuntu, Cantarell, 'Open Sans', 'Helvetica Neue', sans-serif;\n    width: 80%;\n    font-size: 18px;\n    padding: 12px 10px;\n    border: none;\n    border-radius: 4px;\n    background-color: #ffedd8;\n    :focus {\n    border: 2px solid #221007;\n    }\n    margin-right: 30px;\n  }\n  @media screen and (min-width:769px) and (max-width: 1099px){\n    font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, Oxygen, Ubuntu, Cantarell, 'Open Sans', 'Helvetica Neue', sans-serif;\n    font-size: 14px;\n    padding: 6px 5px;\n    border: none;\n    border-radius: 4px;\n    background-color: #ffedd8;\n    :focus {\n    border: 2px solid #221007;\n    }\n    margin-right: 10px;\n  }\n  @media screen and (max-width: 768px){\n    font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, Oxygen, Ubuntu, Cantarell, 'Open Sans', 'Helvetica Neue', sans-serif;\n    font-size: 14px;\n    padding: 6px 5px;\n    border: none;\n    border-radius: 4px;\n    background-color: #ffedd8;\n    :focus {\n    border: 2px solid #221007;\n    }\n    margin-right: 10px;\n  }\n`;\n\nexport const DivH1 = style.div`\n  display: flex;\n  align-items: center;\n`;\n\nexport const Img = style.img`\n  height: 40px;\n  width: 50px;\n  margin-left: 30px;\n`;\n\nexport const Button = style.button`\n  @media screen and (min-width:1100px){\n    text-transform: uppercase;\n    color: #221007;\n    font-size: 15px;\n    font-weight: bold;\n    padding: 12px 12px;\n    border: none;\n    border-radius: 4px;\n    background-color: #ffedd8;\n    :focus {\n    border: 2px solid #221007;\n    }\n    margin-right: 20px;\n    margin-top: 20px;\n  }\n  @media screen and (min-width:769px) and (max-width: 1099px){\n    text-transform: uppercase;\n    color: #221007;\n    font-size: 13px;\n    font-weight: bold;\n    padding: 12px 12px;\n    border: none;\n    border-radius: 4px;\n    background-color: #ffedd8;\n    :focus {\n    border: 2px solid #221007;\n    }\n    margin-top: 8px;\n  }\n  @media screen and (max-width: 768px){\n    text-transform: uppercase;\n    color: #221007;\n    font-size: 13px;\n    font-weight: bold;\n    padding: 12px 12px;\n    border: none;\n    border-radius: 4px;\n    background-color: #ffedd8;\n    :focus {\n    border: 2px solid #221007;\n    }\n    margin-top: 8px;\n  }\n`;\n\nexport const DivTable = style.div`\n  @media screen and (max-width: 1099px){\n    overflow-x: scroll;\n  }\n`;\n\nexport const Table = style.table`\n  @media screen and (min-width:1100px){\n    margin-top: 20px;\n    width: 100%;\n    border-collapse: collapse;\n    td {\n    border: 1px solid #ddd;\n    padding: 8px;\n    }\n    th {\n    border: 1px solid #ddd;\n    padding: 8px;\n    padding-top: 12px;\n    padding-bottom: 12px;\n    text-align: left;\n    background-color: #d4a276;\n    color: #221007;\n    font-weight: bold;\n    text-align: center;\n    }\n    tr{\n    text-align: center;\n    :nth-child(even){background-color: #f3d5b5;}\n    :hover {\n      background-color: #8b5e34;\n      color: white;\n      }\n    }\n  }\n  @media screen and (min-width:769px) and (max-width: 1099px){\n    margin-top: 20px;\n    width: 100%;\n    border-collapse: collapse;\n    td {\n      border: 1px solid #ddd;\n      padding: 8px;\n    }\n    th {\n      border: 1px solid #ddd;\n      padding: 12px 8px;\n      background-color: #d4a276;\n      color: #221007;\n      text-align: center;\n    }\n    tr{\n      text-align: center;\n      :nth-child(even){background-color: #f3d5b5;}\n      :hover {\n        background-color: #8b5e34;\n        color: white;\n        }\n      }\n  }\n  @media screen and (max-width: 768px){\n    margin-top: 20px;\n    width: 100%;\n    border-collapse: collapse;\n    td {\n      border: 1px solid #ddd;\n      padding: 8px;\n    }\n    th {\n      border: 1px solid #ddd;\n      padding: 12px 8px;\n      background-color: #d4a276;\n      color: #221007;\n      text-align: center;\n      font-size: 13px;\n    }\n    tr{\n      text-align: center;\n      :nth-child(even){background-color: #f3d5b5;}\n      :hover {\n        background-color: #8b5e34;\n        color: white;\n        }\n      }\n      font-size: 13px;\n\n  }\n  }\n`;\nexport const ExitButton = style.button`\n  background-color: #221007;\n  border: 1.5px solid #f3d5b5;\n  text-transform: uppercase;\n  font-size: 15px;\n  font-weight: bold;\n  border-radius: 4px;\n  padding: 12px 12px;\n  color: white;\n  @media screen and (max-width:290px){\n  font-size: 10px;\n  }\n`;\n","// componente\n\nimport React from 'react';\nimport { connect } from 'react-redux';\nimport propTypes from 'prop-types';\nimport {\n  fetchCurrencies,\n  saveUserExpenses,\n  removeExpenses,\n  editExpense,\n  editSavedExpenses,\n} from '../actions/index';\nimport {\n  Div,\n  DivHeader,\n  Header,\n  P,\n  H1,\n  Form,\n  Select,\n  Input,\n  Img,\n  DivH1,\n  Button,\n  DivTable,\n  Table,\n  ExitButton\n} from './style/styleWallet';\n\nclass Wallet extends React.Component {\n  constructor() {\n    super();\n\n    this.state = {\n      totalExpenses: 0,\n    };\n  }\n\n  componentDidMount() {\n    const { dispatchGetCurrencies } = this.props;\n\n\n    dispatchGetCurrencies();\n    const addForm = document.getElementById('add-form');\n    addForm.setAttribute('style', 'display: flex');\n  }\n\n  fetchExchange = async () => {\n    try {\n      const URL = 'https://economia.awesomeapi.com.br/json/all';\n      const response = await fetch(URL);\n      const result = await response.json();\n      return result;\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  addTotalUpdate = () => {\n    const { expenses } = this.props;\n    const { totalExpenses } = this.state;\n\n    const selectedCurrency = document.getElementById('coin');\n    const userExpense = document.getElementById('expense');\n\n    const rate = (((Object.values(expenses[0].exchangeRates))\n      .filter((currency) => currency.codein !== 'BRLT'))\n      .filter((currency) => currency.code === selectedCurrency.value)\n    )[0].ask;\n\n    const thisTotalExpense = ((userExpense.value) * rate);\n\n    this.setState({\n      totalExpenses: totalExpenses + thisTotalExpense,\n    });\n  }\n\n  editTotalUpdate = () => {\n    const { expenses } = this.props;\n    const { totalExpenses } = this.state;\n\n    const selectedCurrency = document.getElementById('edit-coin');\n    const userExpense = document.getElementById('edit-expense');\n\n    const rate = (((Object.values(expenses[0].exchangeRates))\n      .filter((currency) => currency.codein !== 'BRLT'))\n      .filter((currency) => currency.code === selectedCurrency.value)\n    )[0].ask;\n\n    const thisTotalExpense = ((userExpense.value) * rate);\n\n    this.setState({\n      totalExpenses: totalExpenses + thisTotalExpense,\n    });\n  }\n\n  saveButtonClick = async (event) => {\n    event.preventDefault();\n    const { dispatchSaveExpenses, expenses } = this.props;\n    const newId = expenses.length;\n\n    const date = document.getElementById('date');\n    const userExpense = document.getElementById('expense');\n    const description = document.getElementById('description');\n    const selectedCurrency = document.getElementById('coin');\n    const method = document.getElementById('method');\n    const tag = document.getElementById('tag');\n\n    const exchangeRates = await this.fetchExchange();\n\n    dispatchSaveExpenses({\n      id: newId,\n      date: date.value,\n      value: userExpense.value,\n      description: description.value,\n      currency: selectedCurrency.value,\n      method: method.value,\n      tag: tag.value,\n      exchangeRates,\n    });\n\n    this.addTotalUpdate();\n\n    userExpense.value = '';\n    description.value = '';\n    date.value = '';\n    tag.value = '';\n    method.value = '';\n  }\n\n  editButtonClick = () => {\n    const { dispatchEditSavedExpenses } = this.props;\n    const addForm = document.getElementById('add-form');\n    const editForm = document.getElementById('edit-form');\n\n    editForm.removeAttribute('style');\n    editForm.setAttribute('hidden', 'true');\n    addForm.setAttribute('style', 'display: flex');\n\n    dispatchEditSavedExpenses({\n      id: Number((document.getElementById('edit-id').value)),\n      date: (document.getElementById('edit-date').value),\n      value: (document.getElementById('edit-expense').value),\n      description: (document.getElementById('edit-description')).value,\n      currency: (document.getElementById('edit-coin')).value,\n      method: (document.getElementById('edit-method')).value,\n      tag: (document.getElementById('edit-tag')).value,\n      exchangeRates: JSON.parse((document.getElementById('edit-rates').value)),\n    });\n\n    let checks = (document.getElementsByClassName('checkbox')\n    );\n    checks = Array.from(checks)\n    checks.forEach((element) => {\n      element.checked = false;\n    });\n\n    if ((document.getElementById('add-form')).hasAttribute('hidden')) {\n      (document.getElementById('edit-form'))\n        .setAttribute('hidden', 'true');\n      (document.getElementById('add-form'))\n        .removeAttribute('hidden');\n    }\n\n      ([...(document.getElementsByClassName(\"checkbox\"))])\n        .forEach((element) => element\n          .removeAttribute('hidden'));\n\n    this.editTotalUpdate();\n  }\n\n  convertedValue = (value) => {\n    const { totalExpenses } = this.state;\n    this.setState({\n      totalExpenses: totalExpenses - value,\n    });\n  }\n\n  exitButton = () => {\n    window.history.back();\n  }\n\n  render() {\n    const {\n      userEmail,\n      currencies,\n      expenses,\n      dispatchRemoveExpense,\n      dispatchEditExpense } = this.props;\n    const { totalExpenses } = this.state;\n    const editForm = document.getElementById('edit-form');\n    const addForm = document.getElementById('add-form');\n\n    return (\n      <Div>\n        <DivHeader>\n          <Header>\n            <p>Total: <br /><strong>R$ { totalExpenses.toFixed(2) }</strong></p>\n            <P>\n              Usuário:\n              {' '}\n              <br /><strong>{ userEmail }</strong>\n            </P>\n            <ExitButton\n              type=\"submit\"\n              onClick={ this.exitButton }\n            >\n              Sair\n            </ExitButton>\n          </Header>\n        </DivHeader>\n\n        <DivH1>\n          <Img src=\"https://cdn-icons-png.flaticon.com/512/1077/1077974.png\"></Img>\n          <H1>Minhas despesas</H1>\n        </DivH1>\n\n        <Form id='add-form'>\n          <label htmlFor=\"date\">\n            <strong>Data:</strong> <br />\n            <Input\n              type=\"date\"\n              id=\"date\"\n              name=\"date\"\n            />\n          </label>\n          <label htmlFor=\"description\">\n            <strong>Descrição:</strong> <br />\n            <Input\n              type=\"text\"\n              id=\"description\"\n              name=\"description\"\n              size=\"20\"\n              maxlength=\"20\"\n            />\n          </label>\n          <label htmlFor=\"expense\">\n            <strong>Valor:</strong> <br />\n            <Input\n              type=\"number\"\n              id=\"expense\"\n              name=\"expense\"\n              required\n            />\n          </label>\n          <label htmlFor=\"coin\">\n            <strong>Moeda:</strong> <br />\n            <Select\n              id=\"coin\"\n            >\n              {currencies.map((code) => <option key={ code.code }>{ code }</option>)}\n            </Select>\n          </label>\n          <label htmlFor=\"tag\">\n            <strong>Tag:</strong> <br />\n            <Select\n              id=\"tag\"\n            >\n              <option></option>\n              <option>Alimentação </option>\n              <option>Lazer</option>\n              <option>Trabalho </option>\n              <option>Transporte </option>\n              <option>Saúde</option>\n              <option>Outro</option>\n            </Select>\n          </label>\n          <label htmlFor=\"method\">\n            <strong>Forma de Pagamento:</strong> <br />\n            <Select\n              data-testid=\"method-input\"\n              id=\"method\"\n            >\n              <option></option>\n              <option>Dinheiro</option>\n              <option>Cartão de crédito</option>\n              <option>Cartão de débito</option>\n              <option>PIX</option>\n            </Select>\n          </label>\n          <Button\n            type=\"submit\"\n            onClick={ this.saveButtonClick }\n          >\n            Adicionar\n          </Button>\n        </Form>\n\n        <Form id='edit-form' hidden>\n          <input id='edit-id' hidden />\n          <input id='edit-rates' hidden />\n          <label htmlFor=\"date\">\n            <strong>Data:</strong> <br />\n            <Input\n              type=\"date\"\n              id=\"edit-date\"\n              name=\"date\"\n              autofocus=\"true\"\n            />\n          </label>\n          <label htmlFor=\"description\">\n            <strong>Descrição:</strong> <br />\n            <Input\n              data-testid=\"description-input\"\n              type=\"text\"\n              id=\"edit-description\"\n              name=\"description\"\n              size=\"20\"\n              maxlength=\"20\"\n            />\n          </label>\n          <label htmlFor=\"expense\">\n            <strong>Valor:</strong> <br />\n            <Input\n              type=\"text\"\n              id=\"edit-expense\"\n              name=\"expense\"\n              size=\"10\"\n              required\n            />\n          </label>\n          <label htmlFor=\"coin\">\n            <strong>Moeda:</strong> <br />\n            <Select\n              id=\"edit-coin\"\n            >\n              {currencies.map((code) => <option key={ code.code }>{ code }</option>)}\n            </Select>\n          </label>\n          <label htmlFor=\"edit-tag\">\n            <strong>Tag:</strong> <br />\n            <Select\n              id=\"edit-tag\"\n            >\n              <option></option>\n              <option>Alimentação </option>\n              <option>Lazer</option>\n              <option>Trabalho </option>\n              <option>Transporte </option>\n              <option>Saúde</option>\n              <option>Outro</option>\n            </Select>\n          </label>\n          <label htmlFor=\"edit-method\">\n            <strong>Forma de Pagamento:</strong> <br />\n            <Select\n              data-testid=\"method-input\"\n              id=\"edit-method\"\n            >\n              <option></option>\n              <option>Dinheiro</option>\n              <option>Cartão de crédito </option>\n              <option>Cartão de débito </option>\n              <option>PIX</option>\n            </Select>\n          </label>\n          <Button\n            type=\"button\"\n            onClick={ this.editButtonClick }\n          >\n            Concluído\n          </Button>\n        </Form>\n\n        <DivTable>\n          <Table>\n            <tr>\n              <th>Data</th>\n              <th>Valor</th>\n              <th>Moeda</th>\n              <th>Descrição</th>\n              <th>Tag</th>\n              <th>Método de pagamento</th>\n              <th>Câmbio utilizado</th>\n              <th>Moeda de conversão</th>\n              <th>Valor convertido</th>\n              <th>Editar</th>\n              <th />\n            </tr>\n            {\n              expenses.map((expense) => {\n                const exchangeRates = (Object.entries(expense.exchangeRates))\n                  .find((element) => element[0] === expense.currency);\n\n                return (\n                  <tr key={expense.id}>\n                    <td>{(expense.date).split('-').reverse().join('/')}</td>\n                    <td>{Number(expense.value).toFixed(2)}</td>\n                    <td>{(exchangeRates[1].name).split('/',1)}</td>\n                    <td>{expense.description}</td>\n                    <td>{expense.tag}</td>\n                    <td>{expense.method}</td>\n                    <td>{Number(exchangeRates[1].ask).toFixed(2)}</td>\n                    <td>Real</td>\n                    <td>{Number(expense.value * exchangeRates[1].ask).toFixed(2)}</td>\n                    <td>\n                      <input\n                        type=\"checkbox\"\n                        className=\"checkbox\"\n                        onChange={() => (\n                          // eslint-disable-next-line\n                          dispatchEditExpense(expense.id),\n                          this.convertedValue(Number(expense.value * exchangeRates[1].ask).toFixed(2)),\n                          editForm.removeAttribute('hidden'),\n                          editForm.setAttribute('style', 'display: flex'),\n                          addForm.setAttribute('hidden', 'true'),\n                          addForm.removeAttribute('style')\n                        )}\n                      >\n                      </input>\n                    </td>\n                    <td>\n                      <button\n                        type=\"button\"\n                        onClick={() => (\n                          dispatchRemoveExpense(expense.id),\n                          this.convertedValue(Number(expense.value * exchangeRates[1].ask).toFixed(2))\n                        )}\n                      >\n                        Apagar\n                      </button>\n                    </td>\n                  </tr>\n                );\n              })\n            }\n          </Table>\n        </DivTable>\n\n      </Div>\n    );\n  }\n}\n\nconst mapStateToProps = (state) => ({\n  userEmail: state.user.email,\n  currencies: state.wallet.currencies,\n  expenses: state.wallet.expenses,\n});\n\nconst mapDispatchToProps = (dispatch) => ({\n  dispatchGetCurrencies: () => dispatch(fetchCurrencies()),\n  dispatchSaveExpenses: (expenses) => dispatch(saveUserExpenses(expenses)),\n  dispatchRemoveExpense: (expense) => dispatch(removeExpenses(expense)),\n  dispatchEditExpense: (id) => dispatch(editExpense(id)),\n  dispatchEditSavedExpenses: (expense) => dispatch(editSavedExpenses(expense)),\n});\n\nWallet.propTypes = {\n  userEmail: propTypes.string.isRequired,\n  currencies: propTypes.func.isRequired,\n  expenses: propTypes.func.isRequired,\n  fetchCurrencies: propTypes.func.isRequired,\n  saveUserExpenses: propTypes.func.isRequired,\n  removeExpenses: propTypes.func.isRequired,\n  editExpense: propTypes.func.isRequired,\n  editSavedExpenses: propTypes.func.isRequired,\n  dispatchGetCurrencies: propTypes.func.isRequired,\n  dispatchSaveExpenses: propTypes.func.isRequired,\n  dispatchRemoveExpense: propTypes.func.isRequired,\n  dispatchEditExpense: propTypes.func.isRequired,\n  dispatchEditSavedExpenses: propTypes.func.isRequired,\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Wallet);\n","import React from 'react';\nimport { Switch, Route } from 'react-router-dom';\nimport { createGlobalStyle } from 'styled-components';\nimport Login from './pages/Login';\nimport Wallet from './pages/Wallet';\n\nconst GlobalStyle = createGlobalStyle`\n* {\n    body {\n      background-color: #ffedd8;\n      display: flex;\n      justify-content: center;\n      align-items: center;\n    }\n    html, body, div, span, applet, object, iframe, h1, h2, h3, h4, h5, h6, p, blockquote, pre, a, abbr, acronym, address, big, cite, code, del, dfn, em, img, ins, kbd, q, s, samp, small, strike, b, sub, sup, tt, var, b, u, i, center, dl, dt, dd, ol, ul, li, fieldset, form, label, legend, table, caption, tbody, tfoot, thead, tr, th, td, article, aside, canvas, details, embed, figure, figcaption, footer, header, hgroup, menu, nav, output, ruby, section, summary, time, mark, audio, video {\n      margin: 0;\n      padding: 0;\n      border: 0;\n      font-size: 100%;\n      font: inherit;\n      vertical-align: baseline;\n    }\n\n    article, aside, details, figcaption, figure, footer, header, hgroup, menu, nav, section {\n      display: block;\n    }\n\n    body {\n      line-height: 1;\n    }\n\n    ol, ul {\n      list-style: none;\n    }\n\n    blockquote, q {\n      quotes: none;\n    }\n\n    blockquote:before, blockquote:after, q:before, q:after {\n      content: '';\n      content: none;\n    }\n\n    table {\n      border-collapse: collapse;\n      border-spacing: 0;\n    }\n}\n`;\n\nclass App extends React.Component {\n  render() {\n    document.title = 'Despesas';\n    return (\n      <>\n        <GlobalStyle />\n        <Switch>\n          <Route exact path=\"/\" component={ Login } />\n          <Route path=\"/carteira\" component={ Wallet } />\n        </Switch>\n      </>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\nimport { BrowserRouter } from 'react-router-dom';\nimport './index.css';\nimport store from './store';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <BrowserRouter basename={ process.env.PUBLIC_URL }>\n    <Provider store={ store }>\n      <App />\n    </Provider>\n  </BrowserRouter>,\n  document.getElementById('root'),\n);\n\nserviceWorker.unregister();\n"],"sourceRoot":""}